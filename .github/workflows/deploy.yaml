name: Main

on:
  push:
    branches:
      - main

env:
  GITHUB_SHA: ${{ github.sha }}
  GCLOUD_PROJECT: nackswinget-af7ef
  GCLOUD_REGION: europe-north1
  GCLOUD_SCHEDULER_REGION: europe-west6
  GCLOUD_BUCKET: nackswinget-af7ef.appspot.com
  TZ: Europe/Stockholm

permissions: # Global permissions
  contents: "read"
  id-token: "write"

jobs:
  deploy-functions:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        function:
          - name: competitions-api
            secrets: ""
          - name: news-api
            secrets: ""
          - name: notifications-api
            secrets: "ACTIVITY_ORG_ID=ACTIVITY_ORG_ID:latest,ACTIVITY_BASE_URL=ACTIVITY_BASE_URL:latest,ACTIVITY_USERNAME=ACTIVITY_USERNAME:latest,ACTIVITY_PASSWORD=ACTIVITY_PASSWORD:latest"
          - name: calendars-api
            secrets: "ACTIVITY_ORG_ID=ACTIVITY_ORG_ID:latest,ACTIVITY_BASE_URL=ACTIVITY_BASE_URL:latest,ACTIVITY_USERNAME=ACTIVITY_USERNAME:latest,ACTIVITY_PASSWORD=ACTIVITY_PASSWORD:latest"
          - name: calendars-update-api
            secrets: "ACTIVITY_ORG_ID=ACTIVITY_ORG_ID:latest,ACTIVITY_BASE_URL=ACTIVITY_BASE_URL:latest,ACTIVITY_USERNAME=ACTIVITY_USERNAME:latest,ACTIVITY_PASSWORD=ACTIVITY_PASSWORD:latest"
            memory: 1GiB
            max_instances: 1
            concurrency_limit: 1

    concurrency: ${{ matrix.function.name }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.14.0

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - id: auth
        name: Setup gcloud Cloud SDK auth
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: "projects/560237127162/locations/global/workloadIdentityPools/github-deployer-auth-pool/providers/github-deployer-auth-provider"
          service_account: "github-deployer-account@nackswinget-af7ef.iam.gserviceaccount.com"
          export_environment_variables: true

      - name: Set up gcloud Cloud SDK environment
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy ${{ matrix.function.name }}
        working-directory: functions
        run: |
          pnpx esbuild \
            ./src/index.ts \
            --bundle \
            --platform=node \
            --target=node20 \
            --outfile=./dist/index.js \
            --external:@google-cloud/functions-framework \
            --external:@google-cloud/scheduler \
            --external:@google-cloud/storage
            
          jq -n \
            --arg name "@nackswinget/functions" \
            --arg version "1.0.0" \
            --arg main "index.js" \
            --arg start "node index.js" \
            --arg build "echo \"No build step\"" \
            --arg functions_version "^3.4.0" \
            --arg scheduler_version "^4.3.0" \
            --arg storage_version "^7.11.2" \
            '{
              name: $name,
              version: $version,
              main: $main,
              scripts: {
                start: $start,
                build: $build
              },
              dependencies: {
                "@google-cloud/functions-framework": $functions_version,
                "@google-cloud/scheduler": $scheduler_version,
                "@google-cloud/storage": $storage_version
              }
            }' > ./dist/package.json

          gcloud functions deploy ${{ matrix.function.name }} \
            --gen2 \
            --runtime=nodejs20 \
            --region="${GCLOUD_REGION}" \
            --source=./dist \
            --entry-point=${{ matrix.function.name }} \
            --trigger-http \
            --max-instances=${{ matrix.function.max_instances || 1 }} \
            --allow-unauthenticated \
            --update-secrets=${{ matrix.function.secrets }} \
            --update-env-vars=GCLOUD_PROJECT=${GCLOUD_PROJECT},GCLOUD_BUCKET=${GCLOUD_BUCKET},GCLOUD_REGION=${GCLOUD_REGION},GITHUB_SHA=${GITHUB_SHA} \
            --memory=${{ matrix.function.memory || '512MiB' }} \
            ${{ matrix.function.concurrency_limit && format('--concurrency={0}', matrix.function.concurrency_limit) || '' }}

  update-scheduler:
    runs-on: ubuntu-latest
    needs:
      - deploy-functions

    concurrency: "scheduler"

    steps:
      - id: auth
        name: Setup  gcloud Cloud SDK auth
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: "projects/560237127162/locations/global/workloadIdentityPools/github-deployer-auth-pool/providers/github-deployer-auth-provider"
          service_account: "github-deployer-account@nackswinget-af7ef.iam.gserviceaccount.com"
          export_environment_variables: true

      - name: Set up gcloud Cloud SDK environment
        uses: google-github-actions/setup-gcloud@v2

      - name: Setup gcloud defaults
        run: |
          gcloud config set functions/region europe-north1
          gcloud config set functions/gen2 true

      - name: Update scheduler calendar-update-lean-5m
        run: |
          gcloud scheduler jobs update http calendar-update-lean-5m \
            --schedule "*/5 0-1,7-23 * * *" \
            --time-zone "Europe/Stockholm" \
            --http-method POST \
            --uri $(gcloud functions describe calendars-api --format='value(serviceConfig.uri)')/update \
            --location ${GCLOUD_SCHEDULER_REGION} \
            --description "calendars-api: Lean update NSW GCS .ics files (5m)"

      - name: Update scheduler calendar-auth-update
        run: |
          CRON_PATTERN="$(( RANDOM % 60 )) 0-1/2,6-23/2 * * *"
          echo "Scheduling at ${CRON_PATTERN}"
          gcloud scheduler jobs update http calendar-auth-update \
            --schedule "${CRON_PATTERN}" \
            --time-zone "Europe/Stockholm" \
            --http-method POST \
            --uri $(gcloud functions describe calendars-update-api --format='value(serviceConfig.uri)') \
            --location ${GCLOUD_SCHEDULER_REGION} \
            --max-retry-attempts 5 \
            --min-backoff 5m \
            --description "calendar-auth-update: Update NSW with full auth and refreshing all calendars"

      - name: Update scheduler news-update
        run: |
          CRON_PATTERN="*/30 * * * *"
          echo "Scheduling at ${CRON_PATTERN}"
          gcloud scheduler jobs update http news-update \
            --schedule "${CRON_PATTERN}" \
            --time-zone "Europe/Stockholm" \
            --http-method POST \
            --uri $(gcloud functions describe news-api --format='value(serviceConfig.uri)')/update \
            --location ${GCLOUD_SCHEDULER_REGION} \
            --max-retry-attempts 3 \
            --min-backoff 1m \
            --description "news-update: Update NSW news"

      - name: Update scheduler competitions-update
        run: |
          CRON_PATTERN="$(( RANDOM % 60 )) * * * *"
          echo "Scheduling at ${CRON_PATTERN}"
          gcloud scheduler jobs update http competitions-update \
            --schedule "${CRON_PATTERN}" \
            --time-zone "Europe/Stockholm" \
            --http-method POST \
            --uri "$(gcloud functions describe competitions-api --format='value(serviceConfig.uri)')/update" \
            --location ${GCLOUD_SCHEDULER_REGION} \
            --max-retry-attempts 3 \
            --min-backoff 5m \
            --description "news-update: Update competitions calendar"

      - name: Trigger update
        run: |
          curl -v -X POST $(gcloud functions describe calendars-update-api --format='value(serviceConfig.uri)')
          curl -v -X POST $(gcloud functions describe competitions-api --format='value(serviceConfig.uri)')

  clean-artifacts:
    runs-on: ubuntu-latest
    needs:
      - deploy-functions

    steps:
      - uses: actions/checkout@v4

      - id: auth
        name: Setup  gcloud Cloud SDK auth
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: "projects/560237127162/locations/global/workloadIdentityPools/github-deployer-auth-pool/providers/github-deployer-auth-provider"
          service_account: "github-deployer-account@nackswinget-af7ef.iam.gserviceaccount.com"
          export_environment_variables: true

      - name: Set up gcloud Cloud SDK environment
        uses: google-github-actions/setup-gcloud@v2

      - name: Clean build artifacts
        run: ./functions/clean-artifacts.sh

  notify:
    runs-on: ubuntu-latest
    needs:
      - deploy-functions

    steps:
      - name: Send deploy message to slack
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          YYYYMMDD=$(date '+%Y-%m-%d %H:%M:%S')
          MESSAGE=" üèãÔ∏è NSW functions has been deployed at: \`${YYYYMMDD}\`"
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"${MESSAGE}\"}" ${SLACK_WEBHOOK}

  build-apps-android:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Node.JS
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.14.0

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Build source
        run: pnpm --filter @nackswinget/mobile run build

      - name: Package webapp
        working-directory: apps/mobile
        run: npx cap sync android

      - uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 18

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - id: auth
        name: Setup  gcloud Cloud SDK auth
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: "projects/560237127162/locations/global/workloadIdentityPools/github-deployer-auth-pool/providers/github-deployer-auth-provider"
          service_account: "github-deployer-account@nackswinget-af7ef.iam.gserviceaccount.com"
          create_credentials_file: true

      - name: Set up gcloud Cloud SDK environment
        uses: google-github-actions/setup-gcloud@v2

      - name: Fetch and write GOOGLE_PLAY_KEYSTORE
        run: |
          gcloud secrets versions access latest --secret="GOOGLE_PLAY_KEYSTORE" --out-file /tmp/google_play.keystore
          echo "ANDROID_KEYSTORE_PATH=/tmp/google_play.keystore" >> "$GITHUB_ENV"

      - name: Fetch and write GOOGLE_PLAY_KEYSTORE_SETTINGS
        run: |
          gcloud secrets versions access latest --secret="GOOGLE_PLAY_KEYSTORE_SETTINGS" --out-file /tmp/keystore.properties
          echo "ANDROID_KEYSTORE_PROPERTIES=/tmp/keystore.properties" >> "$GITHUB_ENV"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 11076708
          log-accepted-android-sdk-licenses: false

      - name: Build with Gradle
        run: pnpm --filter @nackswinget/mobile run android:build
